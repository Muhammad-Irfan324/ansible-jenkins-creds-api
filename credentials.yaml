JENKINS_URL: "http://{{ JENKINS_USERNAME }}:{{ JENKINS_PASSWORD }}@192.168.1.5:8080"

JENKINS_CRUMB_URL: "http://192.168.1.5:8080/crumbIssuer/api/json"

JENKINS_NO_LOG: True

JENKINS_AWS_CRED_PATH: "ansible-jenkins-creds-api/credentials"
CRED_CONTENT:
  - { section: "default", option: "aws_access_key_id",  value: "{{ AWS_ACCESS }}" }
  - { section: "default", option: "aws_secret_access_key",  value: "{{ AWS_SECRET_KEY }}" }



JENKINS_CREDENTIALS:
  
  - url: "{{ JENKINS_URL }}/job/{{ JOB_DIR }}/credentials/store/folder/domain/_/createCredentials"
    type: "file"
    file_path: "{{ JENKINS_AWS_CRED_PATH }}"
    body:
      yaml:
        '': 0
        credentials:
          file: "secret"
          stapler-class: "org.jenkinsci.plugins.plaincredentials.impl.FileCredentialsImpl"
          id: "tools-edx-jenkins-aws-credentials"
          scope: "GLOBAL"
  
  - url: "{{ JENKINS_URL }}/job/{{ JOB_DIR }}/credentials/store/folder/domain/_/createCredentials"
    type: "file"
    file_path: "{{ JENKINS_AWS_CRED_PATH }}"
    body:
      yaml:
        '': 0
        credentials:
          secret: "{{ MCKINSEY-CONTINOUS-INTEGRATION-ROLE-ARN }}"
          stapler-class: "org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl"
          id: "mckinsey-continious-integration-role-arn"
          scope: "GLOBAL"        
  
  - url: "{{ JENKINS_URL }}/job/{{ JOB_DIR }}/credentials/store/folder/domain/_/createCredentials"
    type: "file"
    file_path: "{{ JENKINS_AWS_CRED_PATH }}"
    body:
      yaml:
        '': 0
        credentials:
          secret: "{{ SLACK_AUTHORIZATION_TOKEN }}"
          stapler-class: "org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl"
          id: "slack_authorization_token"
          scope: "GLOBAL"  